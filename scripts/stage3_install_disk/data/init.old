#!/bin/sh

set -x

rescue_shell() {
    echo "Something went wrong. Dropping to a shell."
    exec sh
}

#Function for parsing command line options with "=" in them
# get_opt("init=/sbin/init") will return "/sbin/init"
get_opt() {
    echo "$@" | cut -d "=" -f 2
}

#mount -o ro /dev/sda1 /mnt/root || rescue_shell

mount -t devtmpfs none /dev

mount -t proc /proc /proc
mount -t sysfs none /sys

#mknod /dev/null c 1 3
#mknod /dev/tty c 5 0
#mknod -m 600 /dev/console c 5 1
#mknod -m 600 /dev/tty1 c 4 1
#mknod -m 600 /dev/tty2 c 4 2

ls -la /dev

cat /proc/mounts

sleep 10

#Defaults
init="/sbin/init"
root="/dev/hda1"

#Process command line options
for i in $(cat /proc/cmdline); do
    case $i in
        root\=*)
            root=$(get_opt $i)
            ;;
        init\=*)
            init=$(get_opt $i)
            ;;
    esac
done


mkdir -p /newroot

#Mount the root device
mount "${root}" /newroot

#Check if $init exists and is executable
if [[ -x "/newroot/${init}" ]] ; then
    #Unmount all other mounts so that the ram used by
    #the initramfs can be cleared after switch_root
    umount /sys /proc /dev
    
    #Switch to the new root and execute init
    exec switch_root /newroot "${init}"
fi

#This will only be run if the exec above failed
echo "Failed to switch_root, dropping to a shell"
exec sh

#/bin/sh --login



